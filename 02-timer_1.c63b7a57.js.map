{"mappings":"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","sources":["src/js/02-timer_1.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport Notiflix from 'notiflix';\n\nconst refs = {\n  input: document.querySelector('#datetime-picker'),\n  buttonStart: document.querySelector('button[data-start]'),\n  buttonStop: document.querySelector('button[data-stop]'),\n  field: document.querySelector('.field'),\n};\nconst { input, buttonStart, buttonStop, field } = refs;\nlet endTime = null;\n\n// Опции для flatpickr с вызовом обработчика таймера\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  enableSeconds: false,\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    endTime = selectedDates[0].getTime();\n    const currentTime = Date.now();\n    let deltaTime = endTime - currentTime;\n    let checkSeconds = Math.floor(deltaTime / 1000);\n    if (checkSeconds < 0) {\n      buttonStart.setAttribute('disabled', 'disabled');\n      buttonStop.setAttribute('disabled', 'disabled');\n      Notiflix.Report.failure(\n        'Please choose a date in the future',\n        'Press the button to continue',\n        'Button'\n      );\n    } else {\n      buttonStart.hasAttribute('disabled')\n        ? buttonStart.toggleAttribute('disabled')\n        : buttonStart.removeAttribute('disabled');\n      timerHandler(endTime);\n    }\n  },\n};\n\n// Инициализация интерфейса выбора даты\nconst fp = flatpickr(input, options);\n\n// Вызов функции-обработчика таймера\nfunction timerHandler(endTime) {\n  class Timer {\n    constructor({ onTick }) {\n      this.intervalId = null;\n      this.isActive = false;\n      this.onTick = onTick;\n      this.init();\n    }\n\n    init() {\n      this.isActive = false;\n      const time = this.convertMs(0);\n      this.onTick(time);\n    }\n\n    start() {\n      if (this.isActive) return this.init();\n\n      buttonStart.setAttribute('disabled', 'disabled');\n      buttonStop.removeAttribute('disabled');\n      this.isActive = true;\n\n      this.intervalId = setInterval(() => {\n        const currentTime = Date.now();\n        let deltaTime = endTime - currentTime;\n        let checkSeconds = Math.round(deltaTime / 1000);\n        if (checkSeconds < 0 && !this.isActive) {\n          this.isActive = false;\n          Notiflix.Report.failure(\n            'Please choose a date in the future',\n            'Press the button to continue',\n            'Button'\n          );\n          this.stop();\n          return;\n        } else if (checkSeconds > 0 && this.isActive) {\n          this.isActive = true;\n          const time = this.convertMs(deltaTime);\n          this.onTick(time);\n        } else {\n          this.isActive = true;\n          this.init();\n          Notiflix.Report.success(\n            'Timer stopped',\n            'Press the button to continue',\n            'Button'\n          );\n          this.stop();\n          return;\n        }\n      }, 1000);\n    }\n    stop() {\n      buttonStart.setAttribute('disabled', 'disabled');\n      buttonStop.setAttribute('disabled', 'disabled');\n      clearInterval(this.intervalId);\n      this.init();\n    }\n    convertMs(timeMs) {\n      const second = 1000;\n      const minute = second * 60;\n      const hour = minute * 60;\n      const day = this.addLeadingZero(hour * 24);\n      const days = this.addLeadingZero(Math.floor(timeMs / day));\n      const hours = this.addLeadingZero(Math.floor((timeMs % day) / hour));\n      const minutes = this.addLeadingZero(\n        Math.floor(((timeMs % day) % hour) / minute)\n      );\n      const seconds = this.addLeadingZero(\n        Math.floor((((timeMs % day) % hour) % minute) / 1000)\n      );\n      return { days, hours, minutes, seconds };\n    }\n\n    addLeadingZero(value) {\n      return String(value).padStart(2, '0');\n    }\n  }\n\n  function updateClock({ days, hours, minutes, seconds }) {\n    field.firstElementChild.textContent = days;\n    field.nextElementSibling.firstElementChild.textContent = hours;\n    field.nextElementSibling.nextElementSibling.firstElementChild.textContent =\n      minutes;\n    field.nextElementSibling.nextElementSibling.nextElementSibling.firstElementChild.textContent =\n      seconds;\n  }\n\n  const timer = new Timer({\n    onTick: updateClock,\n  });\n\n  buttonStart.addEventListener('click', timer.start.bind(timer));\n  buttonStop.addEventListener('click', timer.stop.bind(timer));\n}\n"],"names":["$8MBJY","parcelRequire","$f39f9364bfc558d9$var$refs","input","document","querySelector","buttonStart","buttonStop","field","$f39f9364bfc558d9$var$input","$f39f9364bfc558d9$var$buttonStart","$f39f9364bfc558d9$var$buttonStop","$f39f9364bfc558d9$var$field","$f39f9364bfc558d9$var$endTime","$f39f9364bfc558d9$var$options","enableTime","time_24hr","defaultDate","Date","enableSeconds","minuteIncrement","onClose","selectedDates","getTime","currentTime","now","deltaTime","Math","floor","setAttribute","$parcel$interopDefault","$6JpON","Report","failure","hasAttribute","toggleAttribute","removeAttribute","endTime1","Timer1","Timer","param","onTick","this","intervalId","isActive","init","key","time","convertMs","setInterval","checkSeconds","round","_this","stop","success","clearInterval","timeMs","minute","hour","day","addLeadingZero","days","hours","minutes","seconds","value","String","padStart","updateClock","firstElementChild","textContent","nextElementSibling","timer","addEventListener","start","bind","$f39f9364bfc558d9$var$timerHandler","$dbdyf","default"],"version":3,"file":"02-timer_1.c63b7a57.js.map"}