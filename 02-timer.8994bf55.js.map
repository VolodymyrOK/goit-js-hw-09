{"mappings":"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","sources":["node_modules/@swc/helpers/lib/_class_call_check.js","node_modules/@swc/helpers/lib/_create_class.js","src/js/02-timer.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classCallCheck;\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _createClass;\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\n","import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport Notiflix from 'notiflix';\n\nconst refs = {\n  input: document.querySelector('#datetime-picker'),\n  button: document.querySelector('button[data-start]'),\n  field: document.querySelector('.field'),\n  restart: document.querySelector('.restart'),\n};\nconst { input, button, field, restart } = refs;\nlet endTime = null;\n\n// Options for flatpickr with call to timer handler function\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  enableSeconds: false,\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    endTime = selectedDates[0].getTime();\n    const currentTime = Date.now();\n    let deltaTime = endTime - currentTime;\n    let checkSeconds = Math.floor(deltaTime / 1000);\n    if (checkSeconds < 0) {\n      button.setAttribute('disabled', 'disabled');\n      Notiflix.Report.failure(\n        'Please choose a date in the future',\n        'Press the button to continue',\n        'Button'\n      );\n    } else {\n      button.hasAttribute('disabled')\n        ? button.toggleAttribute('disabled')\n        : button.removeAttribute('disabled');\n      timerHandler(endTime);\n    }\n  },\n};\n\n// Date picker interface initialization\n// const fp = flatpickr(input, options);\nflatpickr(input, options);\n\n// Timer handler function\nfunction timerHandler(endTime) {\n  class Timer {\n    constructor({ onTick }) {\n      this.intervalId = null;\n      this.isActive = false;\n      this.onTick = onTick;\n      this.init();\n    }\n\n    init() {\n      this.isActive = false;\n      const time = this.convertMs(0);\n      this.onTick(time);\n    }\n\n    start() {\n      if (this.isActive) return this.init();\n\n      button.setAttribute('disabled', 'disabled');\n      input.setAttribute('disabled', 'disabled');\n      restart.textContent = 'To restart the timer, you need to reload the page';\n\n      restart.style.backgroundColor = 'teal';\n      restart.style.fontSize = '24px';\n      restart.style.textAlign = 'center';\n      restart.style.maxWidth = '310px';\n      restart.style.color = 'white';\n\n      this.isActive = true;\n\n      this.intervalId = setInterval(() => {\n        const currentTime = Date.now();\n        let deltaTime = endTime - currentTime;\n        let checkSeconds = Math.round(deltaTime / 1000);\n        if (checkSeconds < 0 && !this.isActive) {\n          this.isActive = false;\n          Notiflix.Report.failure(\n            'Please reload the page',\n            'To start the timer',\n            ''\n          );\n        } else if (checkSeconds > 0 && this.isActive) {\n          this.isActive = true;\n          const time = this.convertMs(deltaTime);\n          this.onTick(time);\n        } else {\n          this.isActive = true;\n          this.init();\n          Notiflix.Report.success(\n            'Timer stopped',\n            'Press the button to continue',\n            'Button'\n          );\n          return;\n        }\n      }, 1000);\n    }\n\n    convertMs(timeMs) {\n      const second = 1000;\n      const minute = second * 60;\n      const hour = minute * 60;\n      const day = this.addLeadingZero(hour * 24);\n      const days = this.addLeadingZero(Math.floor(timeMs / day));\n      const hours = this.addLeadingZero(Math.floor((timeMs % day) / hour));\n      const minutes = this.addLeadingZero(\n        Math.floor(((timeMs % day) % hour) / minute)\n      );\n      const seconds = this.addLeadingZero(\n        Math.floor((((timeMs % day) % hour) % minute) / 1000)\n      );\n      return { days, hours, minutes, seconds };\n    }\n\n    addLeadingZero(value) {\n      return String(value).padStart(2, '0');\n    }\n  }\n\n  function updateClock({ days, hours, minutes, seconds }) {\n    field.firstElementChild.textContent = days;\n    field.nextElementSibling.firstElementChild.textContent = hours;\n    field.nextElementSibling.nextElementSibling.firstElementChild.textContent =\n      minutes;\n    field.nextElementSibling.nextElementSibling.nextElementSibling.firstElementChild.textContent =\n      seconds;\n  }\n\n  const timer = new Timer({\n    onTick: updateClock,\n  });\n\n  button.addEventListener('click', timer.start.bind(timer));\n}\n"],"names":["Object","defineProperty","$665014edacbfe17b$exports","value","default","instance","Constructor","TypeError","$74e7f8130373505f$var$_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","$74e7f8130373505f$exports","protoProps","staticProps","prototype","$84b9dae4df53835d$var$refs","input","document","querySelector","button","field","restart","$84b9dae4df53835d$var$input","$84b9dae4df53835d$var$button","$84b9dae4df53835d$var$field","$84b9dae4df53835d$var$restart","$84b9dae4df53835d$var$endTime","$84b9dae4df53835d$var$options","enableTime","time_24hr","defaultDate","Date","enableSeconds","minuteIncrement","onClose","selectedDates","getTime","currentTime","now","deltaTime","Math","floor","setAttribute","$parcel$interopDefault","$6JpON","Report","failure","hasAttribute","toggleAttribute","removeAttribute","endTime1","Timer1","Timer","param","onTick","this","intervalId","isActive","init","time","convertMs","textContent","style","backgroundColor","fontSize","textAlign","maxWidth","color","setInterval","checkSeconds","round","_this","success","timeMs","minute","hour","day","addLeadingZero","days","hours","minutes","seconds","String","padStart","updateClock","firstElementChild","nextElementSibling","timer","addEventListener","start","bind","$84b9dae4df53835d$var$timerHandler","$dbdyf"],"version":3,"file":"02-timer.8994bf55.js.map"}