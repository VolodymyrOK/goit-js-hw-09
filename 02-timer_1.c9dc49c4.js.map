{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,S,aAIA,MAAMC,EAAO,CACXC,MAAOC,SAASC,cAAc,oBAC9BC,YAAaF,SAASC,cAAc,sBACpCE,WAAYH,SAASC,cAAc,qBACnCG,MAAOJ,SAASC,cAAc,YAE1BF,MAAEM,EAAKH,YAAEI,EAAWH,WAAEI,EAAUH,MAAEI,GAAUV,EAClD,IAAIW,EAAU,KAGoB,MAA5BC,EAAU,CACdC,YAAY,EACZC,WAAW,EACXC,YAAa,IAAIC,KACjBC,eAAe,EACfC,gBAAiB,EACjBC,QAAQC,GACNT,EAAUS,EAAc,GAAGC,UAC3B,MAAMC,EAAcN,KAAKO,MACzB,IAAIC,EAAYb,EAAUW,EACPG,KAAKC,MAAMF,EAAY,KACvB,GACjBhB,EAAYmB,aAAa,WAAY,YACrClB,EAAWkB,aAAa,WAAY,YACpCC,EAAAC,GAASC,OAAOC,QACd,qCACA,+BACA,YAGFvB,EAAYwB,aAAa,YACrBxB,EAAYyB,gBAAgB,YAC5BzB,EAAY0B,gBAAgB,YAUtC,SAAsBC,GACpB,MAAMC,EAQJC,OACEC,KAAKC,UAAW,EAChB,MAAMC,EAAOF,KAAKG,UAAU,GAC5BH,KAAKI,OAAOF,E,CAGdG,QACE,GAAIL,KAAKC,SAAU,OAAOD,KAAKD,OAE/B7B,EAAYmB,aAAa,WAAY,YACrClB,EAAWyB,gBAAgB,YAC3BI,KAAKC,UAAW,EAEhBD,KAAKM,WAAaC,aAAY,KAC5B,MAAMvB,EAAcN,KAAKO,MACzB,IAAIC,EAAYW,EAAUb,EACtBwB,EAAerB,KAAKsB,MAAMvB,EAAY,KAC1C,GAAIsB,EAAe,IAAMR,KAAKC,SAQ5B,OAPAD,KAAKC,UAAW,EAChBX,EAAAC,GAASC,OAAOC,QACd,qCACA,+BACA,eAEFO,KAAKU,OAEA,KAAIF,EAAe,GAAKR,KAAKC,UAalC,OARAD,KAAKC,UAAW,EAChBD,KAAKD,OACLT,EAAAC,GAASC,OAAOmB,QACd,gBACA,+BACA,eAEFX,KAAKU,OAZuC,CAC5CV,KAAKC,UAAW,EAChB,MAAMC,EAAOF,KAAKG,UAAUjB,GAC5Bc,KAAKI,OAAOF,E,IAYb,I,CAELQ,OACExC,EAAYmB,aAAa,WAAY,YACrClB,EAAWkB,aAAa,WAAY,YACpCuB,cAAcZ,KAAKM,YACnBN,KAAKD,M,CAEPI,UAAUU,GACR,MACMC,EAAkB,GADT,IAETC,EAAgB,GAATD,EACPE,EAAMhB,KAAKiB,eAAsB,GAAPF,GAShC,MAAO,C,KARMf,KAAKiB,eAAe9B,KAAKC,MAAMyB,EAASG,I,MACvChB,KAAKiB,eAAe9B,KAAKC,MAAMyB,EAAUG,EAAOD,I,QAC9Cf,KAAKiB,eACnB9B,KAAKC,MAAMyB,EAAWG,EAAOD,EAAQD,I,QAEvBd,KAAKiB,eACnB9B,KAAKC,MAAMyB,EAAYG,EAAOD,EAAQD,EAAU,M,CAKpDG,eAAeC,GACb,OAAOC,OAAOD,GAAOE,SAAS,EAAG,I,CAzEnCC,aAAYjB,OAAEA,IACZJ,KAAKM,WAAa,KAClBN,KAAKC,UAAW,EAChBD,KAAKI,OAASA,EACdJ,KAAKD,M,EAyET,SAASuB,GAAYC,KAAEA,EAAIC,MAAEA,EAAKC,QAAEA,EAAOC,QAAEA,IAC3CtD,EAAMuD,kBAAkBC,YAAcL,EACtCnD,EAAMyD,mBAAmBF,kBAAkBC,YAAcJ,EACzDpD,EAAMyD,mBAAmBA,mBAAmBF,kBAAkBC,YAC5DH,EACFrD,EAAMyD,mBAAmBA,mBAAmBA,mBAAmBF,kBAAkBC,YAC/EF,C,CAGJ,MAAMI,EAAQ,IAAIhC,EAAM,CACtBM,OAAQkB,IAGVpD,EAAY6D,iBAAiB,QAASD,EAAMzB,MAAM2B,KAAKF,IACvD3D,EAAW4D,iBAAiB,QAASD,EAAMpB,KAAKsB,KAAKF,G,CAtGjDG,CAAa5D,G,IAMR,EAAAb,EAAA0E,SAAUjE,EAAOK","sources":["src/js/02-timer_1.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport Notiflix from 'notiflix';\n\nconst refs = {\n  input: document.querySelector('#datetime-picker'),\n  buttonStart: document.querySelector('button[data-start]'),\n  buttonStop: document.querySelector('button[data-stop]'),\n  field: document.querySelector('.field'),\n};\nconst { input, buttonStart, buttonStop, field } = refs;\nlet endTime = null;\n\n// Опции для flatpickr с вызовом обработчика таймера\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  enableSeconds: false,\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    endTime = selectedDates[0].getTime();\n    const currentTime = Date.now();\n    let deltaTime = endTime - currentTime;\n    let checkSeconds = Math.floor(deltaTime / 1000);\n    if (checkSeconds < 0) {\n      buttonStart.setAttribute('disabled', 'disabled');\n      buttonStop.setAttribute('disabled', 'disabled');\n      Notiflix.Report.failure(\n        'Please choose a date in the future',\n        'Press the button to continue',\n        'Button'\n      );\n    } else {\n      buttonStart.hasAttribute('disabled')\n        ? buttonStart.toggleAttribute('disabled')\n        : buttonStart.removeAttribute('disabled');\n      timerHandler(endTime);\n    }\n  },\n};\n\n// Инициализация интерфейса выбора даты\nconst fp = flatpickr(input, options);\n\n// Вызов функции-обработчика таймера\nfunction timerHandler(endTime) {\n  class Timer {\n    constructor({ onTick }) {\n      this.intervalId = null;\n      this.isActive = false;\n      this.onTick = onTick;\n      this.init();\n    }\n\n    init() {\n      this.isActive = false;\n      const time = this.convertMs(0);\n      this.onTick(time);\n    }\n\n    start() {\n      if (this.isActive) return this.init();\n\n      buttonStart.setAttribute('disabled', 'disabled');\n      buttonStop.removeAttribute('disabled');\n      this.isActive = true;\n\n      this.intervalId = setInterval(() => {\n        const currentTime = Date.now();\n        let deltaTime = endTime - currentTime;\n        let checkSeconds = Math.round(deltaTime / 1000);\n        if (checkSeconds < 0 && !this.isActive) {\n          this.isActive = false;\n          Notiflix.Report.failure(\n            'Please choose a date in the future',\n            'Press the button to continue',\n            'Button'\n          );\n          this.stop();\n          return;\n        } else if (checkSeconds > 0 && this.isActive) {\n          this.isActive = true;\n          const time = this.convertMs(deltaTime);\n          this.onTick(time);\n        } else {\n          this.isActive = true;\n          this.init();\n          Notiflix.Report.success(\n            'Timer stopped',\n            'Press the button to continue',\n            'Button'\n          );\n          this.stop();\n          return;\n        }\n      }, 1000);\n    }\n    stop() {\n      buttonStart.setAttribute('disabled', 'disabled');\n      buttonStop.setAttribute('disabled', 'disabled');\n      clearInterval(this.intervalId);\n      this.init();\n    }\n    convertMs(timeMs) {\n      const second = 1000;\n      const minute = second * 60;\n      const hour = minute * 60;\n      const day = this.addLeadingZero(hour * 24);\n      const days = this.addLeadingZero(Math.floor(timeMs / day));\n      const hours = this.addLeadingZero(Math.floor((timeMs % day) / hour));\n      const minutes = this.addLeadingZero(\n        Math.floor(((timeMs % day) % hour) / minute)\n      );\n      const seconds = this.addLeadingZero(\n        Math.floor((((timeMs % day) % hour) % minute) / 1000)\n      );\n      return { days, hours, minutes, seconds };\n    }\n\n    addLeadingZero(value) {\n      return String(value).padStart(2, '0');\n    }\n  }\n\n  function updateClock({ days, hours, minutes, seconds }) {\n    field.firstElementChild.textContent = days;\n    field.nextElementSibling.firstElementChild.textContent = hours;\n    field.nextElementSibling.nextElementSibling.firstElementChild.textContent =\n      minutes;\n    field.nextElementSibling.nextElementSibling.nextElementSibling.firstElementChild.textContent =\n      seconds;\n  }\n\n  const timer = new Timer({\n    onTick: updateClock,\n  });\n\n  buttonStart.addEventListener('click', timer.start.bind(timer));\n  buttonStop.addEventListener('click', timer.stop.bind(timer));\n}\n"],"names":["$fbklV","parcelRequire","$3ffb4e0fbc79ed72$var$refs","input","document","querySelector","buttonStart","buttonStop","field","$3ffb4e0fbc79ed72$var$input","$3ffb4e0fbc79ed72$var$buttonStart","$3ffb4e0fbc79ed72$var$buttonStop","$3ffb4e0fbc79ed72$var$field","$3ffb4e0fbc79ed72$var$endTime","$3ffb4e0fbc79ed72$var$options","enableTime","time_24hr","defaultDate","Date","enableSeconds","minuteIncrement","onClose","selectedDates","getTime","currentTime","now","deltaTime","Math","floor","setAttribute","$parcel$interopDefault","$7Y9D8","Report","failure","hasAttribute","toggleAttribute","removeAttribute","endTime1","Timer","init","this","isActive","time","convertMs","onTick","start","intervalId","setInterval","checkSeconds","round","stop","success","clearInterval","timeMs","minute","hour","day","addLeadingZero","value","String","padStart","constructor","updateClock","days","hours","minutes","seconds","firstElementChild","textContent","nextElementSibling","timer","addEventListener","bind","$3ffb4e0fbc79ed72$var$timerHandler","default"],"version":3,"file":"02-timer_1.c9dc49c4.js.map"}